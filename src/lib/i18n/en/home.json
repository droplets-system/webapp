{
	"more": "More information",
	"morep1": "This document will continue to evolve and more information will be added as community feedback is received. This is the start to what is essentially a living white paper for Droplets.",
	"morep2": "For discussion related to this project, a Telegram channel has been created here:",
	"q1": "What is the Droplets system?",
	"q1p1": "The Droplets system is a minimalistic smart contract designed to serve the entire ecosystem.",
	"q1p2": "At its core, the Droplets system is a smart contract that allows anyone to create and manage non-fungible pieces of data which are backed by RAM. This data can stand alone as a unit of value and can be leveraged for its uniqueness in other applications. The sole purpose of the Droplets system is to manage this data and enhance its utility.",
	"q1p3": "Anyone is free to use this system to create as many unique Droplets as they'd like by using their own network resources. Any developer is also free to leverage this system and its unique data in their own applications in a provably fair manner.",
	"q2": "What is an individual Droplet?",
	"q2p1": "Each individual Droplet is a unique, non-fungible piece of data owned by a specific account. It is a primitive data type that alone offers uniqueness and inherent value.",
	"q2p2": "A Droplet is similar to an Ordinal found on a UTXO-based blockchain. The creation of a Droplet will use {{sizeDropRow}} bytes of fungible RAM and transform it into an non-fungible ordinal. Once created it can be traded, destroyed, or used as unique data in logic of other contracts and applications (in-game items, inscriptions, NFTs, etc).",
	"q2p3": "Unlike ordinals on UTXO chains, Droplets are not associated with an unspent token output and instead owned by accounts. Without this dependency on UTXO, a Droplet can be destroyed in order to reclaim part of the value that was used to create it. This gives every Droplet an inherent value associated to the amount of RAM used to create it.",
	"q3": "What can a Droplet be used for?",
	"q3p1": "Besides simply existing as a store of value, Droplets can be utilized by other applications for their unique properties. Using a Droplet with another application can happen in multiple ways, which is decided by creators of those other applications. The application could require simple verification of ownership, require verification of a Droplet from a specific timeframe, require a transfer of a specific Droplet, or requiring the destruction of a droplet for participation.",
	"q3p2a": "The uniqueness a Droplet can also be used as",
	"q3p2b": "seed data",
	"q3p2c": "in other applications to represent unique ownership (similar to an inscription) or combined with an oracle system in algorithms that use",
	"q3p2d": "pseudorandom",
	"q3p2e": "or",
	"q3p2f": "procedural generation",
	"q3p2g": "techniques.",
	"q3p3": "The system itself is agnostic to the use of Droplets in other applications. It is up to the creators of those applications to decide how to use Droplets.",
	"q4": "How do I create a Droplet?",
	"q4p1": "Droplets can be created on the Generate page. This page allows users to select the number of droplets to create and shows a detailed breakdown of the token/resource costs involved.",
	"q4p2": "Currently offers two methods to create a Droplet.",
	"q4p3a": "Use tokens to purchase RAM automatically",
	"q4p3a1": "An account with a token balance can send tokens directly to the smart contract to create one or more droplets. The smart contract will use the tokens it receives to automatically purchase the exact amount of RAM required to create the amount of Droplets requested.",
	"q4p3a2": "Any excess tokens sent during this transfer that are not used to purchase RAM for the creation of Droplets will be automatically returned to the sender.",
	"q4p3a3": "Using this method will create an unbound Droplet. The smart contract will control the RAM resources used to create the Droplet until the Droplet is either destroyed or is later bound to a specific account.",
	"q4p4a": "Use an accounts own RAM quota",
	"q4p4a1": "An account with an available RAM quota may use its own resources to create one or more Droplets. Creating a Droplet using this method will use the exact RAM amount required directly from the creators account.",
	"q4p4a2": "Using this method will create a Droplet that is bound to the account that created it. The account that created the Droplet will retain control of the RAM resources used to create it. It will not be tradable unless made unbound in the future. If the bound Droplet is destroyed, the RAM used will be released to the owner.",
	"q5": "What are bound vs unbound Droplets?",
	"q5p1": "Every Droplet that exists is either bound or unbound.",
	"q5p2": "This property affects two aspects the individual Droplet:",
	"q5p3a": "Who technically holds the RAM backing the Droplet.",
	"q5p3b": "Whether a Droplet may be traded to another account.",
	"q5p4": "A Droplet which is bound is locked to a specific account and cannot be traded. The underlying RAM resources for bound Droplets are controlled by the current owner. The opposite of this is a Droplet that is unbound, which is unlocked and may be traded to other accounts. The underlying RAM resources of an unbound DropletÂ is controlled by the smart contract, which is what allows it to be freely traded between accounts.",
	"q5p5": "Each Droplet can be switched between these two states at any time by the owner of a Droplet. The act of switching between bound and unbound requires the current owner to pay the network fees for the operation, as well as use their own EOS and/or RAM to shift the Droplet between these two states.",
	"q6": "Are there any fees when creating a Droplet?",
	"q6p1": "Yes, network fees are required to create a Droplet.",
	"q6p2": "The network fees are paid to the network for the resources used to create the Droplet. The fees are paid in EOS and RAM, and are calculated based on the amount of RAM used to create the Droplet.",
	"q6p3": "The creation of a Droplet consumes all 3 native network resources: CPU, NET, and RAM. The buying and selling of RAM to the system contract has a 0.5% fee. The rental of CPU and NET also has a cost through the Powerup system. All of the fees collected from these systems are paid to EOS token holders who stake their tokens in REX (the Resource Exchange).",
	"q6p4": "No additional fees are taken by the Droplets system.",
	"q6p5a": "The Droplets smart contracts will always remain at a zero token balance. The RAM balance of the Droplets smart contract will slowly increase over time as Droplets are created and destroyed due to ",
	"q6p5b": "an unresolved bug in the precision of the Bancor algorithm.",
	"q6p5c": "This extra RAM will be utilized by the contract for additional data storage.",
	"q7": "What is an Epoch?",
	"q7p1": "An epoch is the simple numeric representation of time since the Droplets project launched. When the Droplets project launches, epoch 1 will begin. After a set amount of time passes, the epoch will advance to 2. This process will repeat for the life of the smart contract.",
	"q7p2": "Each Droplet created is automatically associated to the epoch it was created in. When a Droplet is created it starts in an immature state and will remain that way until the next epoch. Once the next epoch begins, the Droplet will be considered mature and can be combined with the epoch seeds provided by the oracles for use in other applications and algorithms.",
	"q8": "What is an Oracle?",
	"q8p1": "An oracle is a designated account that is responsible for providing a random seed for each epoch. During each epoch, these oracles participate in a commit and reveal process to add unique salt for use in cryptographic algorithms and other applications.",
	"title": "Droplets: An ecosystem-wide distribution mechanism"
}
